# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      - name: Change into home directory.
        run: cd ~

      - name: Get the doctl packages required for our installation
        run: wget https://github.com/digitalocean/doctl/releases/download/v1.57.0/doctl-1.57.0-linux-amd64.tar.gz

      - name: Unpackage the bundle
        run: tar xf ~/doctl-1.57.0-linux-amd64.tar.gz

      - name: Move to our user bin
        run: sudo mv ~/doctl /usr/local/bin

      - name: Initialise the auth context giving the API name
        run: echo "${{ secrets.TESTING_DEPLOYMENT_KEY }}" | doctl auth init --context testing-deployment

      - name: Switch the auth context
        run: doctl auth switch --context testing-deployment

      - name: Run a command to deploy a newly created droplet
        run: doctl compute droplet create --image ubuntu-20-04-x64 --size s-1vcpu-1gb --region fra1 testing-deployed-droplet
